---
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/PageLayout.astro";
import Container from "@/components/Container.astro";
import { dateRange } from "@/lib/utils";
import { WORK } from "@/consts";

const allwork = (await getCollection("work"))
  .sort((a, b) => new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf());

const work = await Promise.all(
  allwork.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">
        Work
      </div>
      
      {work.length === 0 ? (
        <div class="animate text-black/75 dark:text-white/75">
          No work experience added yet.
        </div>
      ) : (
        <div class="space-y-10">
          {work.map((entry) => (
            <section class="animate space-y-4">
              <div class="flex flex-col md:flex-row md:items-center gap-2 md:gap-4">
                <div class="flex flex-col">
                  <div class="text-xl font-semibold text-black dark:text-white">
                    {entry.data.company}
                  </div>
                  <div class="text-lg text-black/75 dark:text-white/75">
                    {entry.data.role}
                  </div>
                </div>
                <div class="text-sm text-black/50 dark:text-white/50 md:ml-auto">
                  {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                </div>
              </div>
              <div class="prose dark:prose-invert max-w-none">
                <entry.Content />
              </div>
            </section>
          ))}
        </div>
      )}
    </div>
  </Container>
</PageLayout>
